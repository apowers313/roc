[project]
authors = [{ name = "apowers313", email = "apowers@ato.ms" }]
license = { text = "MIT" }
requires-python = "<4.0,>=3.10"
name = "roc"
version = "0.1.0"
description = "Reinforcement Learning of Concepts"
readme = "README.md"
# Keywords description https://python-poetry.org/docs/pyproject/#keywords
keywords = [] #! Update me
# Pypi classifiers: https://pypi.org/classifiers/
classifiers = [
  "Development Status :: 3 - Alpha",
  "Intended Audience :: Developers",
  "License :: OSI Approved :: MIT License",
  "Operating System :: OS Independent",
  "Programming Language :: Python :: 3.10",
  "Programming Language :: Python :: 3",
  "Topic :: Software Development :: Libraries :: Python Modules",
]

dependencies = [
  "cachetools<6.0.0,>=5.3.1",
  "click<9.0.0,>=8.1.4",
  "colored<3.0.0,>=2.2.4",
  "flexihumanhash<1.0.0,>=0.9.0",
  "gymnasium<2.0.0,>=1.0.0",
  "loguru<1.0.0,>=0.7.0",
  "networkx<4.0,>=3.3",
  "nle<2.0.0,>=1.1.0",
  "numpy==1.*",
  "pandas<3.0.0,>=2.2.2",
  "psutil<7.0.0,>=6.0.0",
  "pydantic-settings<3.0.0,>=2.0.3",
  "pydantic<3.0.0,>=2.10.3",
  "pydot<4.0.0,>=3.0.1",
  "pymgclient<2.0.0,>=1.3.1",
  "reactivex<5.0.0,>=4.0.4",
  "rich<14.0.0,>=13.5.2",
  "scikit-image<1.0.0,>=0.24.0",
  "scipy<2.0.0,>=1.14.0",
  "strictly-typed-pandas<1.0.0,>=0.3.4",
  "tabulate<1.0.0,>=0.9.0",
  "tqdm<5.0.0,>=4.66.5",
]

[dependency-groups]
dev = [
  "bandit<2.0.0,>=1.7.1",
  "black<25.0.0,>=24.10.0",
  "coverage-badge<2.0.0,>=1.1.0",
  "coverage<8.0.0,>=7.6.9",
  "deptry<1.0.0,>=0.12.0",
  "findpeaks<3.0.0,>=2.6.4",
  "gputil<2.0.0,>=1.4.0",
  "gruut<3.0.0,>=2.4.0",
  "gtts<3.0.0,>=2.5.4",
  "icecream<3.0.0,>=2.1.3",
  "interrogate<2.0.0,>=1.5.0",
  "ipykernel<7.0.0,>=6.29.4",
  "ipympl<1.0.0,>=0.9.4",
  "isort[colors]<6.0.0,>=5.10.1",
  "json-fix<1.0.0,>=0.5.2",
  "marimo<1.0.0,>=0.10.13",
  "matplotlib<4.0.0,>=3.9.0",
  "mkdocs-gen-files<1.0.0,>=0.5.0",
  "mkdocs-literate-nav<1.0.0,>=0.6.0",
  "mkdocs-material<10.0.0,>=9.1.21",
  "mkdocs<2.0.0,>=1.6.0",
  "mkdocstrings[python]<1.0.0,>=0.25.2",
  "mypy-extensions<2.0.0,>=1.0.0",
  "mypy<2.0.0,>=1.4.1",
  "nbformat<6.0.0,>=5.10.4",
  "networkx-gdf<2.0.0,>=1.3.3",
  "nltk<4.0.0,>=3.9.1",
  "nx-parallel<1.0,>=0.2",
  "opencv-python<5.0.0.0,>=4.10.0.84",
  "pandas-stubs<3.0.0.0,>=2.2.2.240603",
  "pickleshare<1.0.0,>=0.7.5",
  "plotly<6.0.0,>=5.22.0",
  "pre-commit<4.0.0,>=3.3.3",
  "pydocstyle<7.0.0,>=6.1.1",
  "pylint<4.0.0,>=3.2.3",
  "pytest-cov<5.0.0,>=4.1.0",
  "pytest-emoji<1.0.0,>=0.2.0",
  "pytest-html<4.0.0,>=3.1.1",
  "pytest-mock<4.0.0,>=3.11.1",
  "pytest-profiling<2.0.0,>=1.7.0",
  "pytest<9.0.0,>=8.2.2",
  "pyttsx3<3.0,>=2.98",
  "pyupgrade<4.0.0,>=3.8.0",
  "ruff<1.0.0,>=0.8.3",
  "safety>=3.2.4",
  "sphinx-autobuild<2022.0.0,>=2021.3.14",
  "sphinx<8.0.0,>=7.0.1",
  "types-cachetools<6.0.0.0,>=5.3.0.5",
  "types-tabulate<1.0.0.0,>=0.9.0.20240106",
]
nvidia = [
  "cuda-python<13.0.0.0,>=12.6.2.post1",
  "cupy-cuda12x<14.0.0,>=13.3.0",
  "pycuda<2025.0.0,>=2024.1.2",
]

[build-system]
requires = ["pdm-backend"]
build-backend = "pdm.backend"

[project.urls]
homepage = "https://github.com/apowers313/roc"
repository = "https://github.com/apowers313/roc"

[project.scripts]
play = "roc.script:cli"

[tool.uv]
default-groups = ["dev"]

[tool.deptry]
# https://fpgmaas.github.io/deptry/usage/
exclude = [
  "docs",
  "site",
  "venv",
  ".venv",
  ".direnv",
  "tests",
  ".git",
  "setup.py",
  "experiments",
]
ignore = ["DEP003"]

[tool.deptry.per_rule_ignores]
DEP001 = ["gymnasium"]
DEP002 = ["pydot"]     # pydot is an optional dependency for networkx

[tool.black]
# https://github.com/psf/black
target-version = ["py311"]
line-length = 100

exclude = '''
/(
    \.git
    | \.hg
    | \.mypy_cache
    | \.tox
    | \.venv
    | _build
    | buck-out
    | build
    | dist
    | env
    | venv
)/
'''

[tool.interrogate]
# ignore-regex = ^get$,^mock_.*,.*BaseClass.*
exclude = [
  "setup.py",
  "docs",
  "build",
  "tests",
  "roc/jupyter",
  "roc/gymnasium.py",
  "roc/script.py",
]
# whitelist-regex =
# color = truegenerate-badge = .# possible values: 0 (minimal output), 1 (-v), 2 (-vv)
# badge-format = svg
ignore-init-method = true
ignore-init-module = true
ignore-magic = true
ignore-semiprivate = false
ignore-private = true
ignore-property-decorators = false
ignore-module = false
ignore-nested-functions = true
ignore-nested-classes = true
ignore-setters = true
fail-under = 45
verbose = 0
quiet = false
omit-covered-files = false

[tool.ruff]
# https://beta.ruff.rs/docs/configuration/
line-length = 100
fix-only = true

[tool.ruff.format]
docstring-code-format = true

[tool.ruff.lint]
extend-select = ["T201", "F401", "ERA001", "RUF100", "DOC", "PIE790"]
unfixable = ["T201"]
select = ["D"]
ignore = [
  "D105", # Missing docstring in magic method
  "D107", # Missing docstring in __init__
  "D205", # 1 blank line required between summary line and description
  "D415", # First line should end with a period, question mark, or exclamation point
]

[tool.ruff.lint.pydocstyle]
convention = "google"

[tool.ruff.lint.per-file-ignores]
"tests/**" = ["D"]
"*_test.py" = ["D"]
"roc/gymnasium.py" = ["D102"]

[tool.mypy]
# https://mypy.readthedocs.io/en/latest/config_file.html#using-a-pyproject-toml-file
python_version = "3.11"
pretty = true
show_traceback = true
color_output = true

allow_redefinition = false
check_untyped_defs = true
disallow_any_generics = true
disallow_incomplete_defs = true
disallow_untyped_defs = true
ignore_missing_imports = true
no_implicit_reexport = true
no_implicit_optional = true
show_column_numbers = true
show_error_codes = true
show_error_context = true
strict_equality = true
strict_optional = true
warn_no_return = true
warn_redundant_casts = true
warn_return_any = true
warn_unreachable = true
warn_unused_configs = true
warn_unused_ignores = true
follow_imports = "silent"
plugins = ["pydantic.mypy", "numpy.typing.mypy_plugin"]
exclude = ["site"]

# [[tool.mypy.overrides]]
# module = "*_test.py"
# disallow_untyped_decorators = false

# [tool.pydantic-mypy]
# init_forbid_extra = true
# init_typed = true
# warn_required_dynamic_aliases = true

[tool.pytest.ini_options]
# pythonpath = [".", "roc"]

# https://docs.pytest.org/en/6.2.x/customize.html#pyproject-toml
# Directories that are not visited by pytest collector:
norecursedirs = [
  "hooks",
  "*.egg",
  ".eggs",
  "dist",
  "build",
  "docs",
  ".tox",
  ".git",
  "__pycache__",
  "experiments",
]

doctest_optionflags = [
  "NUMBER",
  "NORMALIZE_WHITESPACE",
  "IGNORE_EXCEPTION_DETAIL",
]

filterwarnings = [
  "error",
  "ignore::DeprecationWarning",
  "ignore::roc.graphdb.ErrorSavingDuringDelWarning",
  "ignore::ResourceWarning",
]

markers = [
  "slow: tests that take a long time to run",
  #  "pending: tests that haven't been written yet"
]

# Extra options:
addopts = [
  "--strict-markers",
  #"--tb=short",
  "--doctest-modules",
  "--doctest-continue-on-failure",
  #"--cov=roc",
  #"--cov-report=html",
  #"--cov-report=term:skip-covered",
  #"--cov-append",
  #"--no-cov-on-fail",
  # "--cov-fail-under=80",
  # "--emoji",
  #"-rA",
  "-s",
  "-m not slow",
  # "not slow",
]

[tool.coverage.run]
source = ["roc"]
omit = ["roc/script.py", "roc/gymnasium.py", "roc/__init__.py", "roc/jupyter/*"]
branch = true

[tool.coverage.paths]
source = ["roc"]

[tool.coverage.report]
fail_under = 90
show_missing = true
